{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FOC\\\\Downloads\\\\militarybiodataproject\\\\military-biodata-app-react\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport Chart from 'chart.js/auto';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({\n    bp: [],\n    annuals: []\n  });\n  useEffect(() => {\n    api.get('/dashboard/stats').then(res => setStats(res.data)).catch(err => console.error('Failed to fetch stats:', err));\n  }, []);\n  useEffect(() => {\n    if (stats.bp.length > 0) {\n      const ctx = document.getElementById('bpChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: stats.bp.map(entry => new Date(entry.date).toLocaleDateString()),\n          datasets: [{\n            label: 'Systolic',\n            data: stats.bp.map(entry => entry.systolic),\n            borderColor: 'rgba(255, 99, 132, 0.7)',\n            fill: false,\n            tension: 0.4\n          }, {\n            label: 'Diastolic',\n            data: stats.bp.map(entry => entry.diastolic),\n            borderColor: 'rgba(54, 162, 235, 0.7)',\n            fill: false,\n            tension: 0.4\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, [stats.bp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCA Health Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"bpChart\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"checkup-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83E\\uDE7A Annual Checkups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stats.annuals.map((a, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [new Date(a.testDate).toDateString(), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", a.resultSummary, \" \\u2014\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: a.confirmedByUser ? 'confirmed' : 'pending',\n            children: a.confirmedByUser ? '‚úî Confirmed' : '‚è≥ Pending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"zmNpzGcSpZ3OUK0K1hoGf76N6tc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","Chart","jsxDEV","_jsxDEV","Dashboard","_s","stats","setStats","bp","annuals","get","then","res","data","catch","err","console","error","length","ctx","document","getElementById","getContext","type","labels","map","entry","Date","date","toLocaleDateString","datasets","label","systolic","borderColor","fill","tension","diastolic","options","responsive","plugins","legend","position","scales","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","height","a","i","testDate","toDateString","resultSummary","confirmedByUser","_c","$RefreshReg$"],"sources":["C:/Users/FOC/Downloads/militarybiodataproject/military-biodata-app-react/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport Chart from 'chart.js/auto';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({ bp: [], annuals: [] });\n\n  useEffect(() => {\n    api.get('/dashboard/stats')\n      .then(res => setStats(res.data))\n      .catch(err => console.error('Failed to fetch stats:', err));\n  }, []);\n\n  useEffect(() => {\n    if (stats.bp.length > 0) {\n      const ctx = document.getElementById('bpChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: stats.bp.map(entry => new Date(entry.date).toLocaleDateString()),\n          datasets: [\n            {\n              label: 'Systolic',\n              data: stats.bp.map(entry => entry.systolic),\n              borderColor: 'rgba(255, 99, 132, 0.7)',\n              fill: false,\n              tension: 0.4\n            },\n            {\n              label: 'Diastolic',\n              data: stats.bp.map(entry => entry.diastolic),\n              borderColor: 'rgba(54, 162, 235, 0.7)',\n              fill: false,\n              tension: 0.4\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          plugins: { legend: { position: 'top' } },\n          scales: { y: { beginAtZero: true } }\n        }\n      });\n    }\n  }, [stats.bp]);\n\n  return (\n    <div className=\"dashboard\">\n      <h2>üìä Health Monitoring Dashboard</h2>\n      <canvas id=\"bpChart\" height=\"100\"></canvas>\n      <section className=\"checkup-section\">\n        <h3>ü©∫ Annual Checkups</h3>\n        <ul>\n          {stats.annuals.map((a, i) => (\n            <li key={i}>\n              <strong>{new Date(a.testDate).toDateString()}:</strong> {a.resultSummary} ‚Äî \n              <span className={a.confirmedByUser ? 'confirmed' : 'pending'}>\n                {a.confirmedByUser ? '‚úî Confirmed' : '‚è≥ Pending'}\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}